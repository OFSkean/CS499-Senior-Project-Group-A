# Generated by Django 2.2.6 on 2019-12-02 04:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashtagText', models.TextField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Tweet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField()),
                ('isRetweet', models.BooleanField()),
                ('originalText', models.TextField(max_length=500)),
                ('commentText', models.TextField(max_length=500, null=True)),
                ('numRetweetsOriginal', models.IntegerField()),
                ('numRetweetsNew', models.IntegerField(null=True)),
                ('numFavoritesOriginal', models.IntegerField()),
                ('numFavoritesNew', models.IntegerField(null=True)),
                ('lastUpdated', models.DateTimeField()),
                ('twitterQueryUsers', models.TextField(max_length=5000)),
                ('twitterQueryNotUsers', models.TextField(max_length=5000)),
                ('twitterQueryHashtags', models.TextField(max_length=5000)),
                ('twitterQueryKeywords', models.TextField(max_length=5000)),
                ('twitterQueryFromDate', models.TextField(max_length=5000)),
                ('twitterQueryToDate', models.TextField(max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlText', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=20)),
                ('screenName', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('isVerified', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='UrlLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Tweet')),
                ('url', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Url')),
            ],
        ),
        migrations.AddField(
            model_name='tweet',
            name='newUser',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newUser', to='myapp.User'),
        ),
        migrations.AddField(
            model_name='tweet',
            name='originalUser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='originalUser', to='myapp.User'),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_confirmed', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HashtagLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashtag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Hashtag')),
                ('tweet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Tweet')),
            ],
        ),
    ]
